# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# Start AeroSpace at login
start-at-login = true

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    # 'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=3.0',
]
# after-startup-command = []

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 96

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
# on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
# on-focus-changed = ['move-mouse window-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical = 10
outer.left = 10
outer.bottom = 10
outer.top = 10
outer.right = 10

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Key mapping for AZERTY ISO keyboard layout
[key-mapping.key-notation-to-key-code]
a = 'q'
z = 'w'
q = 'a'
w = 'z'
m = 'semicolon'
at = 'backtick'
degree = 'minus'
minus = 'equal'
caret = 'leftSquareBracket'
dollar = 'rightSquareBracket'
percent = 'quote'
comma = 'm'
semicolon = 'comma'
slash = 'period'
equal = 'slash'
# backslash = '' # Not used in AZERTY FR

[exec]
inherit-env-vars = true

[exec.env-vars]
PATH = '/opt/homebrew/bin:/usr/local/bin:${PATH}'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# Disable annoying and useless "hide application" shortcuts
cmd-h = []
cmd-alt-h = []

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
ctrl-shift-comma = 'layout accordion tiles'
ctrl-shift-semicolon = 'layout floating tiling'

ctrl-alt-comma = 'layout accordion tiles'
ctrl-alt-semicolon = 'layout floating tiling'
# ctrl-shift-equal = 'layout sticky tiling' # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
ctrl-shift-degree = 'resize smart -50'
ctrl-shift-minus = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#balance-sizes
ctrl-shift-percent = 'balance-sizes'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
ctrl-shift-left = 'move left'
ctrl-shift-down = 'move down'
ctrl-shift-up = 'move up'
ctrl-shift-right = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
# ctrl-left = '''exec-and-forget aerospace workspace "$(aerospace list-workspaces --monitor mouse --visible)" && aerospace workspace prev'''
# ctrl-right = '''exec-and-forget aerospace workspace "$(aerospace list-workspaces --monitor mouse --visible)" && aerospace workspace next'''

ctrl-left = '''exec-and-forget aerospace workspace "$(aerospace list-workspaces --monitor mouse --visible)" && aerospace list-workspaces --monitor focused --empty no | aerospace workspace prev'''
ctrl-right = '''exec-and-forget aerospace workspace "$(aerospace list-workspaces --monitor mouse --visible)" && aerospace list-workspaces --monitor focused --empty no | aerospace workspace next'''

# Previous and next monitor
# ctrl-up = 'focus-monitor prev --wrap-around'
# ctrl-down = 'focus-monitor next --wrap-around'

# See: https://nikitabobko.github.io/AeroSpace/commands#focuys-monitor
ctrl-alt-slash = 'focus-monitor left'
ctrl-alt-equal = 'focus-monitor right'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
ctrl-alt-left = 'focus left'
ctrl-alt-down = 'focus down'
ctrl-alt-up = 'focus up'
ctrl-alt-right = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#join-with
ctrl-alt-shift-left = 'join-with left'
ctrl-alt-shift-down = 'join-with down'
ctrl-alt-shift-up = 'join-with up'
ctrl-alt-shift-right = 'join-with right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
ctrl-shift-1 = 'move-node-to-workspace 1'
ctrl-shift-2 = 'move-node-to-workspace 2'
ctrl-shift-3 = 'move-node-to-workspace 3'
ctrl-shift-4 = 'move-node-to-workspace 4'
ctrl-shift-5 = 'move-node-to-workspace 5'
ctrl-shift-6 = 'move-node-to-workspace 6'
ctrl-shift-7 = 'move-node-to-workspace 7'
ctrl-shift-8 = 'move-node-to-workspace 8'
ctrl-shift-9 = 'move-node-to-workspace 9'
ctrl-shift-l = 'move-node-to-workspace L'
ctrl-shift-m = 'move-node-to-workspace M'
ctrl-shift-p = 'move-node-to-workspace P'
ctrl-shift-a = 'move-node-to-workspace A'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
ctrl-alt-1 = 'workspace 1'
ctrl-alt-2 = 'workspace 2'
ctrl-alt-3 = 'workspace 3'
ctrl-alt-4 = 'workspace 4'
ctrl-alt-5 = 'workspace 5'
ctrl-alt-6 = 'workspace 6'
ctrl-alt-7 = 'workspace 7'
ctrl-alt-8 = 'workspace 8'
ctrl-alt-9 = 'workspace 9'
ctrl-alt-l = 'workspace L'
ctrl-alt-m = 'workspace M'
ctrl-alt-p = 'workspace P'
ctrl-alt-a = 'workspace A'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
ctrl-alt-shift-1 = 'move-node-to-workspace 1 --focus-follows-window'
ctrl-alt-shift-2 = 'move-node-to-workspace 2 --focus-follows-window'
ctrl-alt-shift-3 = 'move-node-to-workspace 3 --focus-follows-window'
ctrl-alt-shift-4 = 'move-node-to-workspace 4 --focus-follows-window'
ctrl-alt-shift-5 = 'move-node-to-workspace 5 --focus-follows-window'
ctrl-alt-shift-6 = 'move-node-to-workspace 6 --focus-follows-window'
ctrl-alt-shift-7 = 'move-node-to-workspace 7 --focus-follows-window'
ctrl-alt-shift-8 = 'move-node-to-workspace 8 --focus-follows-window'
ctrl-alt-shift-9 = 'move-node-to-workspace 9 --focus-follows-window'
ctrl-alt-shift-l = 'move-node-to-workspace L --focus-follows-window'
ctrl-alt-shift-m = 'move-node-to-workspace M --focus-follows-window'
ctrl-alt-shift-p = 'move-node-to-workspace P --focus-follows-window'
ctrl-alt-shift-a = 'move-node-to-workspace A --focus-follows-window'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
# alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# Open iterm2 mac Application in new floating window
# ctrl-alt-cmd-enter = 'exec-and-forget open -n /Applications/iTerm.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
ctrl-shift-esc = 'mode service'
ctrl-alt-esc = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
degree = [
    'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=3.0',
    'mode main',
]
minus = [
    'exec-and-forget borders active_color=0x00000000 inactive_color=0x00000000 width=0.0',
    'mode main',
]
backspace = ['close-all-windows-but-current', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout


# Callbacks for window detection

# Floating windows

[[on-window-detected]]
if.app-id = 'com.brave.Browser'               # Browser extension
if.window-title-regex-substring = 'Bitwarden' # Bitwarden
run = ['layout floating']

# Primary screen

# Web Browser = 1
[[on-window-detected]]
if.app-id = 'com.brave.Browser'          # Brave Browser
if.window-title-regex-substring = '^.+$' # Non empty title (not extension)
run = ['move-node-to-workspace 1']

# Code Editor = 2
[[on-window-detected]]
if.app-id = 'com.todesktop.230313mzl4w4u92' # Cursor
run = ['move-node-to-workspace 2']

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode' # VSCode
run = ['move-node-to-workspace 2']

# Terminal = 3
[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2' # iTerm
run = ['move-node-to-workspace 3']

# Dev Tools = 4
[[on-window-detected]]
if.app-id = 'com.usebruno.app'     # Bruno
run = ['move-node-to-workspace 4']

[[on-window-detected]]
if.app-id = 'com.tinyapp.TablePlus' # TablePlus
run = ['move-node-to-workspace 4']

[[on-window-detected]]
if.app-id = 'dev.kdrag0n.MacVirt'  # OrbStack
run = ['move-node-to-workspace 4']

[[on-window-detected]]
if.app-id = 'com.figma.Desktop'    # Figma
run = ['move-node-to-workspace 4']

[[on-window-detected]]
if.app-id = 'com.canva.CanvaDesktop' # Canva
run = ['move-node-to-workspace 4']

# Misc = 5
[[on-window-detected]]
if.app-id = 'com.openai.chat'      # ChatGPT
run = ['move-node-to-workspace 5']

# Secondary screen

# Notes = 8
[[on-window-detected]]
if.app-id = 'notion.id'            # Notion
run = ['move-node-to-workspace 8']

# Productivity = 9
[[on-window-detected]]
if.app-id = 'com.todoist.mac.Todoist' # Todoist
run = ['move-node-to-workspace 9']

[[on-window-detected]]
if.app-id = 'com.apple.iCal'       # Calendar
run = ['move-node-to-workspace 9']

# Live Conference = L
[[on-window-detected]]
if.app-id = 'com.hnc.Discord'      # Discord
run = ['move-node-to-workspace L']

# Messaging = M
[[on-window-detected]]
if.app-id = 'Mattermost.Desktop'   # Mattermost
run = ['move-node-to-workspace M']

[[on-window-detected]]
if.app-id = 'com.apple.mail'       # Mail
run = ['move-node-to-workspace M']

# Medias = P
[[on-window-detected]]
if.app-id = 'com.spotify.client'   # Spotify
run = ['move-node-to-workspace P']

[[on-window-detected]]
if.app-id = 'org.videolan.vlc'     # VLC
run = ['move-node-to-workspace P']

# Fallback to floating

[[on-window-detected]]
run = ['layout floating']


# Assign workspaces to monitors
[workspace-to-monitor-force-assignment]
1 = ['1']
2 = ['1']
3 = ['1']
4 = ['1']
5 = ['1']
6 = ['3', '2', '1']
7 = ['3', '2', '1']
8 = ['3', '2', '1']
9 = ['3', '2', '1']
L = ['3', '2', '1']
M = ['3', '2', '1']
P = ['3', '2', '1']
A = ['built-in', '3', '2', '1']
